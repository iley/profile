bind-key C-b last-window
bind-key b send-prefix

# split more intutively with - (horizontal) and | (vertical)
unbind-key %
bind-key | split-window -h
bind-key '\' split-window -h
unbind-key '"'
bind-key - split-window -v

# move between panes with vim-like motions
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes
bind H resize-pane -L 10
bind J resize-pane -D 10
bind K resize-pane -U 10
bind L resize-pane -R 10

set -sg escape-time 0

# ensure that our $TERM value specifies 256 colors
set -g default-terminal 'screen-256color'

# start window indexing at one instead of zero
set -g base-index 1

# use vi-style key bindings in the status line, and copy/choice modes
set -g status-keys vi
set-window-option -g mode-keys vi

setw -g mode-keys vi
#unbind p
bind [ copy-mode
bind Escape copy-mode

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-selection
bind -T copy-mode-vi V send-keys -X rectangle-toggle

bind p paste-buffer
bind N previous-window

# Open new windows and panes with the same directory.
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# custom status line with active window highlighting
set -g status-left '#[fg=colour240]#S:#I |'
set -g status-right '#[fg=colour240]| %a %b %d %I:%M %p'
setw -g status-style fg=colour007,bg=colour234
setw -g window-status-current-style fg=colour208

set -g mouse on

# attempt to set the window title
set -g set-titles on
set -g set-titles-string 'tmux on #H'

# use a large scrollback history
set -g history-limit 10000

# make function keys work in vim
setw -g xterm-keys on
